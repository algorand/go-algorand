tasks:
  - task: docker.Version
    configFilePath: scripts/configure_dev-deps.sh

  - task: shell.docker.Ensure
    name: package
    image: algorand/mule-linux-ubuntu
    version: '{{ docker.Version.outputs.version }}'
    dockerFilePath: docker/build/mule.ubuntu.Dockerfile
    dependencies: docker.Version

  - task: docker.Make
    name: package-test-deb
    docker:
      image: algorand/mule-linux-ubuntu
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [ /var/run/docker.sock:/var/run/docker.sock ]
    target: package-test-deb WORKDIR=/projects/go-algorand

  - task: docker.Make
    name: package-test-rpm
    docker:
      image: algorand/mule-linux-ubuntu
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [ /var/run/docker.sock:/var/run/docker.sock ]
    target: package-test-rpm WORKDIR=/projects/go-algorand

  - task: s3.DownloadFile
    name: deb
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand_${CHANNEL}_${OS_TYPE}-${ARCH_TYPE}_${VERSION}.deb
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

  - task: s3.DownloadFile
    name: rpm
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand-${VERSION}-1.${ARCH_BIT}.rpm
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

jobs:
  package-test-deb:
    configs:
      arch: amd64
    tasks:
      - shell.docker.Ensure.package
      - docker.Make.package-test-deb

  package-test-rpm:
    configs:
      arch: amd64
    tasks:
      - shell.docker.Ensure.package
      - docker.Make.package-test-rpm

  package-test:
    configs:
      arch: amd64
    tasks:
      - shell.docker.Ensure.package
      - docker.Make.package-test-deb
      - docker.Make.package-test-rpm

  package-test-setup-deb:
    tasks:
      - s3.DownloadFile.deb

  package-test-setup-rpm:
    tasks:
      - s3.DownloadFile.rpm

