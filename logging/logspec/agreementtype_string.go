// Code generated by "stringer -type=AgreementType"; DO NOT EDIT.

package logspec

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RoundConcluded-0]
	_ = x[PeriodConcluded-1]
	_ = x[StepTimeout-2]
	_ = x[RoundStart-3]
	_ = x[RoundInterrupted-4]
	_ = x[RoundWaiting-5]
	_ = x[ThresholdReached-6]
	_ = x[BlockAssembled-7]
	_ = x[BlockCommittable-8]
	_ = x[ProposalAssembled-9]
	_ = x[ProposalBroadcast-10]
	_ = x[ProposalFrozen-11]
	_ = x[ProposalAccepted-12]
	_ = x[ProposalRejected-13]
	_ = x[ProposalVerified-14]
	_ = x[BlockRejected-15]
	_ = x[BlockResent-16]
	_ = x[BlockPipelined-17]
	_ = x[VoteAttest-18]
	_ = x[VoteBroadcast-19]
	_ = x[VoteAccepted-20]
	_ = x[VoteRejected-21]
	_ = x[BundleBroadcast-22]
	_ = x[BundleAccepted-23]
	_ = x[BundleRejected-24]
	_ = x[Restored-25]
	_ = x[Persisted-26]
	_ = x[numAgreementTypes-27]
}

const _AgreementType_name = "RoundConcludedPeriodConcludedStepTimeoutRoundStartRoundInterruptedRoundWaitingThresholdReachedBlockAssembledBlockCommittableProposalAssembledProposalBroadcastProposalFrozenProposalAcceptedProposalRejectedProposalVerifiedBlockRejectedBlockResentBlockPipelinedVoteAttestVoteBroadcastVoteAcceptedVoteRejectedBundleBroadcastBundleAcceptedBundleRejectedRestoredPersistednumAgreementTypes"

var _AgreementType_index = [...]uint16{0, 14, 29, 40, 50, 66, 78, 94, 108, 124, 141, 158, 172, 188, 204, 220, 233, 244, 258, 268, 281, 293, 305, 320, 334, 348, 356, 365, 382}

func (i AgreementType) String() string {
	if i < 0 || i >= AgreementType(len(_AgreementType_index)-1) {
		return "AgreementType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AgreementType_name[_AgreementType_index[i]:_AgreementType_index[i+1]]
}
