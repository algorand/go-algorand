/*
def REGION = "us-west-1"
def AMI = "ami-0dd655843c87b6930"
def TYPE = "t2.2xlarge"
*/

def REGION = "us-east-2"
def AMI = "ami-0fc20dd1da406780b"
def TYPE = "t2.2xlarge"

pipeline {
    /*
    parameters {
        string defaultValue: 'master', description: 'Branch name or tag name.', name: 'branch', trim: true
        string defaultValue: 'stable', description: 'Staged channel which should be released.', name: 'channel', trim: true
        string defaultValue: 'algorand-builds/channel', description: 's3://bucket/prefix', name: 'bucket_location', trim: true

        // AWS
        string defaultValue: 'us-west-1', description: 'AWS Region', name: 'region', trim: true
        string defaultValue: 'ami-0dd655843c87b6930', description: 'Amazon Machine Image (default: Ubuntu Server 18.04 LTS, 8 vCPUs, 32 GB RAM', name: 'ami', trim: true
        string defaultValue: 't2.2xlarge', description: 'Instance Type', name: 'type', trim: true
    }
    */

    parameters {
        string defaultValue: 'master', description: 'Branch name or tag name.', name: 'branch', trim: true
    }

    environment {
        AWS_ACCESS_KEY_ID = credentials("prod-s3-aws-access-key-id")
        AWS_SECRET_ACCESS_KEY = credentials("prod-s3-aws-secret-access-key")
    }

    agent any

    stages {
        stage("create ec2 instance") {
            steps {
                sh script: "scripts/release/common/create.sh ${REGION} ${AMI} ${TYPE}"
            }
        }

        stage("setup ec2 instance") {
            steps {
                /*
                sh script: "scripts/release/build/stage/setup/run.sh ${env.GIT_BRANCH}"
                */
                sh script: "scripts/release/build/stage/setup/run.sh ${params.branch}"
            }
        }

        stage("build") {
            steps {
                sh script: "scripts/release/build/stage/build/run.sh"
            }
        }

        stage("package") {
            steps {
                sh script: "scripts/release/build/stage/package/run.sh"
            }
        }

        stage("sign") {
            steps {
                input "Forward gpg-agent"
                sh script: "scripts/release/build/stage/sign/run.sh"
            }
        }

        stage("upload") {
            steps {
                script {
                    sh script: "scripts/release/build/stage/upload/run.sh ${params.channel} ${params.bucket_location}"
                }
            }
        }

        stage("delete ec2 instance") {
            steps {
                sh script: "scripts/release/common/delete.sh ${REGION}"
            }
        }
    }
}

