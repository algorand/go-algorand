# This file is imported into go-algorand/Makefile.

ARCH_BIT = $(shell uname -m)
VER      = $(shell ./scripts/compute_build_number.sh -f)

.PHONY: ci-clean ci-deps ci-setup ci-build package package-deb package-rpm package-$(OS_TYPE)-$(ARCH) package-deb-$(OS_TYPE)-$(ARCH) package-rpm-$(OS_TYPE)-$(ARCH)

ci-clean:
	rm -rf tmp

ci-deps:
	scripts/configure_dev-deps.sh && \
	scripts/check_deps.sh

ci-setup:
	mkdir -p $(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)

ci-test: ci-build
ifeq ($(ARCH), amd64)
	RACE=-race
else
	RACE=
endif
	for PACKAGE_DIRECTORY in $(UNIT_TEST_SOURCES) ; do \
		go test $(GOTAGS) -timeout 2000s $(RACE) $$PACKAGE_DIRECTORY; \
	done

ci-integration: ci-build
	export NODEBINDIR=$(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/bin && \
	export PATH=$(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/bin:$$PATH && \
	export PATH=$(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/tools:$$PATH && \
	export PATH=$(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/test-utils:$$PATH && \
	export SRCROOT=$(SRCPATH) && \
	test/scripts/e2e.sh -c $(BUILDCHANNEL) -n

ci-build: buildsrc gen
	mkdir -p $(SRCPATH)/tmp/node_pkgs && \
	CHANNEL=$(BUILDCHANNEL) PKG_ROOT=$(SRCPATH)/tmp/node_pkgs NO_BUILD=True VARIATIONS=$(OS_TYPE)-$(ARCH) \
	scripts/build_packages.sh $(OS_TYPE)/$(ARCH) && \
	mkdir -p $(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/data && \
	cp gen/devnet/genesis.json $(SRCPATH)/tmp/node_pkgs/$(BUILDCHANNEL)/$(OS_TYPE)-$(ARCH)/data

package-$(OS_TYPE)-$(ARCH): package-deb-$(OS_TYPE)-$(ARCH) package-rpm-$(OS_TYPE)-$(ARCH)

package-deb-$(OS_TYPE)-$(ARCH):
	scripts/release/mule/package/$(OS_TYPE)/$(ARCH)/deb/package.sh $(OS_TYPE) $(ARCH) $$WORKDIR

package-rpm-$(OS_TYPE)-$(ARCH):
	scripts/release/mule/package/$(OS_TYPE)/$(ARCH)/rpm/package.sh $(OS_TYPE) $(ARCH) $$WORKDIR

package-docker-$(OS_TYPE)-$(ARCH):
	scripts/release/mule/package/$(OS_TYPE)/$(ARCH)/docker/package.sh $(OS_TYPE) $(ARCH) $$WORKDIR

package-test-$(OS_TYPE)-$(ARCH): package-test-deb-$(OS_TYPE)-$(ARCH) package-test-rpm-$(OS_TYPE)-$(ARCH)

package-test-deb-$(OS_TYPE)-$(ARCH):
	scripts/release/mule/test/$(OS_TYPE)/$(ARCH)/test.sh $$WORKDIR $(OS_TYPE) $(ARCH) $(ARCH_BIT) $(VER) deb

package-test-rpm-$(OS_TYPE)-$(ARCH):
	scripts/release/mule/test/$(OS_TYPE)/$(ARCH)/test.sh $$WORKDIR $(OS_TYPE) $(ARCH) $(ARCH_BIT) $(VER) rpm

package: package-$(OS_TYPE)-$(ARCH)
package-deb: package-deb-$(OS_TYPE)-$(ARCH)
package-rpm: package-rpm-$(OS_TYPE)-$(ARCH)

package-docker: package-docker-$(OS_TYPE)-$(ARCH)

package-test: package-test-$(OS_TYPE)-$(ARCH)
package-test-deb: package-test-deb-$(OS_TYPE)-$(ARCH)
package-test-rpm: package-test-rpm-$(OS_TYPE)-$(ARCH)

