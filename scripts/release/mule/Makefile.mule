# This file is imported into go-algorand/Makefile.

ARCH_BIT = $(shell uname -m)
VER      = $(shell ./scripts/compute_build_number.sh -f)

.PHONY: ci-clean ci-deps ci-setup ci-build package package-deb package-rpm package-$(OS_TYPE)-$(ARCH) package-deb-$(OS_TYPE)-$(ARCH) package-rpm-$(OS_TYPE)-$(ARCH)

ci-clean:
	rm -rf tmp

ci-deps:
	scripts/configure_dev-deps.sh && \
	scripts/check_deps.sh

ci-setup:
	mkdir -p $(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)

ci-test:
ifeq ($(ARCH), amd64)
	RACE=-race
else
	RACE=
endif
	for PACKAGE_DIRECTORY in $(UNIT_TEST_SOURCES) ; do \
		go test $(GOTAGS) -timeout 2000s $(RACE) $$PACKAGE_DIRECTORY; \
	done

ci-integration:
	NODEBINDIR=$(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/bin \
	PATH=$(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/bin:$$PATH \
	PATH=$(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/tools:$$PATH \
	PATH=$(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/test-utils:$$PATH \
	SRCROOT=$(SRCPATH) \
	test/scripts/e2e.sh -c $(CHANNEL) -n

ci-build: buildsrc gen ci-setup
	CHANNEL=$(CHANNEL) PKG_ROOT=$(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH) NO_BUILD=True VARIATIONS=$(OS_TYPE)-$(ARCH) \
	scripts/build_packages.sh $(OS_TYPE)/$(ARCH) && \
	mkdir -p $(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/data && \
	cp gen/devnet/genesis.json $(SRCPATH)/tmp/node_pkgs/$(OS_TYPE)/$(ARCH)/$(CHANNEL)/$(OS_TYPE)-$(ARCH)/data

# Builds targets from the sub-directories of ./scripts/release/mule/, such as `mule-package`, `mule-sign`, `mule-test`.
# https://scene-si.org/2019/12/04/make-dynamic-makefile-targets/
mule = $(shell ls -d scripts/release/mule/*/ | awk 'BEGIN { FS="/" ; OFS="-" } { print $$3, $$4 }')

mule-deploy-%: PKG_TYPE=$*
mule-deploy-%:
	scripts/release/mule/deploy/$(PKG_TYPE)/deploy.sh $(OS_TYPE) $(ARCH) $(ARCH_BIT) $(VER) $$WORKDIR

mule-package-%: PKG_TYPE=$*
mule-package-%:
	scripts/release/mule/package/$(PKG_TYPE)/package.sh $(OS_TYPE) $(ARCH) $$WORKDIR

mule-sign-%: PKG_TYPE=$*
mule-sign-%:
	scripts/release/mule/sign/sign.sh $(OS_TYPE) $(ARCH) $(ARCH_BIT) $(VER) $(PKG_TYPE) $$WORKDIR

mule-test-%: PKG_TYPE=$*
mule-test-%:
	scripts/release/mule/test/test.sh $(OS_TYPE) $(ARCH) $(ARCH_BIT) $(VER) $(PKG_TYPE) $$WORKDIR

