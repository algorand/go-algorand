#!/usr/bin/env bash

set -e

unset REPO
unset SNAPSHOT
unset VERSION

usage() {
    echo "Usage: $0 -r REPO -v VERSION [ -h | -s SNAPSHOT | -u(pdate) ]"
    exit "$1"
}

update() {
    aptly mirror update stable
#    aptly mirror update beta
#    aptly mirror update indexer

    # https://www.aptly.info/doc/aptly/repo/import/
    # aptly repo import <src-mirror> <dst-repo> <package-query> ...
    aptly repo import stable stable algorand algorand-devtools
#    aptly repo import beta beta algorand-beta algorand-devtools-beta
#    aptly repo import indexer indexer algorand-indexer
}

while getopts "hr:s:uv:" opt
do
    case "$opt" in
        h)
            usage 0
            ;;
        r)
            REPO="$OPTARG"
            ;;
        s)
            SNAPSHOT="$OPTARG"
            ;;
        u)
            update
            exit 0
            ;;
        v)
            VERSION="$OPTARG"
            ;;
        *)
            usage 1
            ;;
    esac
done

if [ -z "$REPO" ]
then
    echo "Repo is a required parameter."
    usage 1
fi

if [[ ! "$REPO" =~ ^beta$|^stable$|^indexer$ ]]
then
    echo "[$0] Repository values must be either \`beta\`, \`stable\` or \`indexer\`."
    usage 1
fi

if [ -z "$VERSION" ]
then
    echo "Version is a required parameter."
    usage 1
fi

if [ -z "$SNAPSHOT" ]
then
    SNAPSHOT="$REPO-$VERSION"
fi

update

BUCKET=algorand-staging
KEY_PREFIX="releases/$REPO/$VERSION"
FILENAME_SUFFIX="${REPO}_linux-amd64_${VERSION}.deb"
ALGORAND_KEY="$KEY_PREFIX/algorand_${FILENAME_SUFFIX}"
DEVTOOLS_KEY="$KEY_PREFIX/algorand-devtools_${FILENAME_SUFFIX}"

for key in {"$ALGORAND_KEY","$DEVTOOLS_KEY"}
do
    if aws s3api head-object --bucket "$BUCKET" --key "$key"
    then
        aws s3 cp "s3://$BUCKET/$key" .
    fi
done

aptly repo add "$REPO" ./*.deb
aptly snapshot create "$SNAPSHOT" from repo "$REPO"
aptly publish snapshot -gpg-key=dev@algorand.com -origin=Algorand -label=Algorand "$SNAPSHOT" s3:algorand-releases:

#aws s3 sync "s3://algorand-staging/releases/$REPO/$VERSION" "s3://algorand-dev-deb-repo/releases/$REPO/$("/root/reverse_hex_timestamp")_$VERSION"

