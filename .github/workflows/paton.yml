name: "Benchmark workflow"
on:
  push:
    branches:
      - master
  pull_request:
# For demonstration purposes, allow paton to run on all PRs.
#    branches:
#      - master
permissions:
  contents: write
  deployments: write
jobs:
  paton:
    name: paton
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go install golang.org/x/perf/cmd/benchstat@latest
      - run: sudo apt-get update
      - run: sudo apt-get -y -q install jq python3-pip
      - run: pip3 install jc # Use pip to install jc because aptitude is stale (https://repology.org/project/jc/versions)
      - run: ./scripts/configure_dev.sh
        shell: bash
      - run: ./scripts/buildtools/install_buildtools.sh
        shell: bash
      - run: ./scripts/travis/before_build.sh # Installs libsodium.
        shell: bash
      - name: Run benchmark
        run: ./scripts/paton.sh --alert-threshold-pct 10 --test-cmd "-run XXX -benchtime 5s -bench BenchmarkControl ./data/transactions/logic"
        shell: bash
      - name: Check files
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "/tmp/alerting_benchmarks.json"
      - name: Add PR comment
        if: steps.check_files.outputs.files_exists == 'true'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.number }}
          body-file: /tmp/alerting_benchmarks.json
 #     - name: Slack Notification
 #       env:
 #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
 #       run: |
 #         curl -X POST --data-urlencode "payload={\"text\": \"Benchmark workflow failed. ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} \"}" $SLACK_WEBHOOK
  #      if: ${{ failure() && (contains(github.ref_name, 'rel/nightly') || contains(github.ref_name, 'rel/beta') || contains(github.ref_name, 'rel/stable') || contains(github.ref_name, 'master')) }}
