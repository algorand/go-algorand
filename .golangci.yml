version: "2"
run:
  tests: true
linters:
  default: none
  enable:
    - copyloopvar
    - errcheck
    - govet
    - ineffassign
    - misspell
    - nilerr
    - nolintlint
    - paralleltest
    - revive
    - staticcheck
    - unused
  settings:
    errcheck:
      exclude-functions:
        - (*github.com/spf13/cobra.Command).MarkFlagRequired
        - (*github.com/spf13/pflag.FlagSet).MarkDeprecated
        - (*github.com/spf13/pflag.FlagSet).MarkShorthandDeprecated
    govet:
      enable:
        - shadow
      settings:
        printf:
          funcs:
            - (github.com/algorand/go-algorand/logging.Logger).Debugf
            - (github.com/algorand/go-algorand/logging.Logger).Infof
            - (github.com/algorand/go-algorand/logging.Logger).Warnf
            - (github.com/algorand/go-algorand/logging.Logger).Errorf
            - (github.com/algorand/go-algorand/logging.Logger).Fatalf
            - (github.com/algorand/go-algorand/logging.Logger).Panicf
            - (github.com/algorand/go-algorand/logging.Logger).Debugln
            - (github.com/algorand/go-algorand/logging.Logger).Infoln
            - (github.com/algorand/go-algorand/logging.Logger).Warnln
            - (github.com/algorand/go-algorand/logging.Logger).Errorln
            - (github.com/algorand/go-algorand/logging.Logger).Fatalln
            - (github.com/algorand/go-algorand/logging.Logger).Panicln
            - (github.com/algorand/go-algorand/logging.Logger).Debug
            - (github.com/algorand/go-algorand/logging.Logger).Info
            - (github.com/algorand/go-algorand/logging.Logger).Warn
            - (github.com/algorand/go-algorand/logging.Logger).Error
            - (github.com/algorand/go-algorand/logging.Logger).Fatal
            - (github.com/algorand/go-algorand/logging.Logger).Panic
            - (github.com/algorand/go-algorand/cmd/goal/main).reportInfof
            - (github.com/algorand/go-algorand/cmd/goal/main).reportInfoln
            - (github.com/algorand/go-algorand/cmd/goal/main).reportWarnf
            - (github.com/algorand/go-algorand/cmd/goal/main).reportWarnln
            - (github.com/algorand/go-algorand/cmd/goal/main).reportWarnRawf
            - (github.com/algorand/go-algorand/cmd/goal/main).reportWarnRawln
            - (github.com/algorand/go-algorand/cmd/goal/main).reportErrorf
            - (github.com/algorand/go-algorand/cmd/goal/main).reportErrorln
        shadow:
          strict: false
    nolintlint:
      require-explanation: true
      require-specific: true
  exclusions:
    generated: lax
    rules:
      - linters:
          - unused
        path: cmd/algofix/
      - linters:
          - unused
        path: cmd/algocfg/
      - linters:
          - unused
        path: cmd/catchpointdump/
      - linters:
          - unused
        path: tools/
      - linters:
          - unused
        path: daemon/kmd/lib/kmdapi/
      - linters:
          - errcheck
          - ineffassign
          - misspell
          - nolintlint
          - staticcheck
          - unused
        path: _test\.go
      - linters:
          - staticcheck
        path: _test\.go
        text: 'SA4006: this value'
      - linters:
          - staticcheck
        text: '(SA3001|SA1019):'
      - linters:
          - revive
        path: _test\.go
        text: 'dot-imports: should not use dot imports'
      - linters:
          - staticcheck
        text: 'SA1019: rand*'
      - linters:
          - govet
        path: _test\.go
        text: shadows declaration at line
      - linters:
          - paralleltest
        path: ^agreement.*_test\.go
      - linters:
          - paralleltest
        path: ^catchup.*_test\.go
      - linters:
          - paralleltest
        path: ^config.*_test\.go
      - linters:
          - paralleltest
        path: ^crypto.*_test\.go
      - linters:
          - paralleltest
        path: ^daemon.*_test\.go
      - linters:
          - paralleltest
        path: ^data.*_test\.go
      - linters:
          - paralleltest
        path: ^gen.*_test\.go
      - linters:
          - paralleltest
        path: ^ledger.*_test\.go
      - linters:
          - paralleltest
        path: ^logging.*_test\.go
      - linters:
          - paralleltest
        path: ^network.*_test\.go
      - linters:
          - paralleltest
        path: ^node.*_test\.go
      - linters:
          - paralleltest
        path: ^protocol.*_test\.go
      - linters:
          - paralleltest
        path: ^rpcs.*_test\.go
      - linters:
          - paralleltest
        path: ^stateproof.*_test\.go
      - linters:
          - paralleltest
        path: ^test.*_test\.go
      - linters:
          - paralleltest
        path: ^tools.*_test\.go
      - linters:
          - paralleltest
        path: ^util.*_test\.go
      - linters:
          - errcheck
          - govet
          - ineffassign
          - misspell
          - revive
          - unused
        path: test/linttest/lintissues\.go
      - path: (.+)\.go$
        text: 'sigchanyzer: misuse of unbuffered os.Signal channel as argument to signal.Notify'
      - path: (.+)\.go$
        text: exported method (.*).Unwrap` should have comment or be unexported
      - path: (.+)\.go$
        text: '`_struct` is unused'
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      - path: (.+)\.go$
        text: ineffective break statement. Did you mean to break out of the outer loop
      - path: (.+)\.go$
        text: '^var-naming: don''t use leading k in Go names'
      - path: (.+)\.go$
        text: '^unused-parameter: parameter'
      - path: (.+)\.go$
        text: '^package-comments: should have a package comment'
      - path: (.+)\.go$
        text: '^unexported-return: '
      - path: (.+)\.go$
        text: '^redefines-builtin-id: redefinition of'
      - path: (.+)\.go$
        text: '^var-declaration: should'
      - path: (.+)\.go$
        text: '^empty-block: this block is empty, you can remove it'
      - path: (.+)\.go$
        text: '^superfluous-else: if block ends with'
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new-from-rev: eb019291beed556ec6ac1ceb4a15114ce4df0c57~25
severity:
  default: error
formatters:
  enable:
    - gofmt
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
      - test/linttest/lintissues\.go
