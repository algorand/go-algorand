tasks:
  - task: docker.Version
    configFilePath: scripts/configure_dev-deps.sh

  - task: shell.docker.Ensure
    name: mule-debian
    image: algorand/go-algorand-ci-mule-debian
    version: '{{ docker.Version.outputs.version }}'
    dockerFilePath: docker/build/mule.go.debian.Dockerfile
    dependencies: docker.Version

  - task: docker.Make
    name: package-sign-deb
    docker:
      image: algorand/go-algorand-ci-mule-debian
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [
        $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent,
        $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx
      ]
    target: mule-sign-deb WORKDIR=/projects/go-algorand

  - task: docker.Make
    name: package-sign-rpm
    docker:
      image: algorand/go-algorand-ci-mule-debian
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [
        $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent,
        $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx
      ]
    target: mule-sign-rpm WORKDIR=/projects/go-algorand

  - task: docker.Make
    name: package-sign-tarball
    docker:
      image: algorand/go-algorand-ci-mule-debian
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [
        $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent,
        $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx
      ]
    target: mule-sign-tar.gz WORKDIR=/projects/go-algorand

  - task: docker.Make
    name: package-sign-source
    docker:
      image: algorand/go-algorand-ci-mule-debian
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      volumes: [
        $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent,
        $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx
      ]
    target: mule-sign-source WORKDIR=/projects/go-algorand

  - task: s3.DownloadFile
    name: deb
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand_${CHANNEL}_${OS_TYPE}-${ARCH_TYPE}_${VERSION}.deb
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

  - task: s3.DownloadFile
    name: rpm
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand-${VERSION}-1.${ARCH_BIT}.rpm
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

  - task: s3.DownloadFiles
    name: tarball
    bucketName: algorand-staging
    prefix: releases/$CHANNEL/$VERSION
    suffix: tar.gz
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

jobs:
  package-sign:
    configs:
      arch: amd64
    tasks:
      - shell.docker.Ensure.mule-debian
      - docker.Make.package-sign-deb
      - docker.Make.package-sign-rpm
      - docker.Make.package-sign-tarball
      - docker.Make.package-sign-source

  package-sign-setup-deb:
    tasks:
      - s3.DownloadFile.deb

  package-sign-setup-rpm:
    tasks:
      - s3.DownloadFile.rpm

  package-sign-setup-tarball:
    tasks:
      - s3.DownloadFiles.tarball

