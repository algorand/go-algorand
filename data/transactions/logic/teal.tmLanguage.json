{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Algorand TEAL",
  "patterns": [
    {
      "include": "#invalid"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#literals"
    },
    {
      "include": "#labels"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#pragmas"
    }
  ],
  "repository": {
    "comments": {
      "name": "comment.line.double-slash.teal",
      "begin": "//",
      "end": "$"
    },
    "invalid": {
      "patterns": [
        {
          "name": "invalid.illegal.teal",
          "match": "^\\s+.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(base64|b64|base32|b32)(?:\\(|\\s+)([a-zA-Z0-9\\+\\/\\=]+)(?:\\)|\\s?|$)",
          "captures": {
            "1": {
              "name": "support.class.teal"
            },
            "2": {
              "name": "string.quoted.triple.teal"
            }
          }
        },
        {
          "match": "^(addr)\\s+([A-Z2-7\\=]+)",
          "captures": {
            "1": {
              "name": "keyword.other.teal"
            },
            "2": {
              "name": "string.unquoted.teal"
            }
          }
        },
        {
          "name": "keyword.other.teal",
          "match": "^(int|byte|addr|intcblock|intc|intc_0|intc_1|intc_2|intc_3|pushint|bytecblock|bytec|bytec_0|bytec_1|bytec_2|bytec_3|pushbytes|bzero|arg|arg_0|arg_1|arg_2|arg_3|args|txn|gtxn|txna|txnas|gtxna|gtxnas|gtxns|gtxnsa|gtxnsas|global|load|loads|store|stores|gload|gloads|gloadss|gaid|gaids)\\b"
        },
        {
          "name": "keyword.control.teal",
          "match": "^(err|bnz|bz|b|return|pop|dup|dup2|dig|cover|uncover|swap|select|assert|callsub|retsub)\\b"
        },
        {
          "name": "keyword.other.unit.teal",
          "match": "^(balance|min_balance|app_opted_in|app_local_get|app_local_get_ex|app_global_get|app_global_get_ex|app_local_put|app_global_put|app_local_del|app_global_del|asset_holding_get|asset_params_get|app_params_get|acct_params_get|log)\\b"
        },
        {
          "name": "keyword.operator.teal",
          "match": "^(b\\||b\u0026|b\\^|b\\~|itxn_begin|itxn_next|itxn_field|itxn_submit|itxn|itxna|itxnas|gitxn|gitxna|gitxnas|sha256|keccak256|sha512_256|sha3_256|ed25519verify|ed25519verify_bare|ecdsa_verify|ecdsa_pk_recover|ecdsa_pk_decompress|\\+|\\-|/|\\*|\\\u003c|\\\u003e|\\\u003c\\=|\\\u003e\\=|\u0026\u0026|\\|\\||shl|shr|sqrt|bitlen|exp|\\=\\=|\\!\\=|\\!|len|itob|btoi|%|\\||\u0026|\\^|\\~|mulw|addw|divw|divmodw|expw|getbit|setbit|getbyte|setbyte|concat|substring|substring3|extract|extract3|extract_uint16|extract_uint32|extract_uint64|base64_decode|json_ref|b\\+|b\\-|b/|b\\*|b\\\u003c|b\\\u003e|b\\\u003c\\=|b\\\u003e\\=|b\\=\\=|b\\!\\=|b%|bsqrt)\\b"
        }
      ]
    },
    "labels": {
      "patterns": [
        {
          "name": "support.variable.teal",
          "match": "^\\w+:.*$"
        },
        {
          "match": "\\b(?\u003c=b|bz|bnz)\\s+(\\w+)\\b",
          "captures": {
            "1": {
              "name": "support.variable.teal"
            }
          }
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.teal",
          "match": "\\b([0-9]+)\\b"
        },
        {
          "name": "constant.numeric.teal",
          "match": "\\b(?\u003c=int\\s+)(0x[0-9]+)\\b"
        },
        {
          "name": "string.quoted.double.teal",
          "match": "\\b(?\u003c=byte\\s+)(0x[0-9]+)\\b"
        },
        {
          "name": "variable.parameter.teal",
          "match": "\\b(unknown|pay|keyreg|acfg|axfer|afrz|appl|NoOp|OptIn|CloseOut|ClearState|UpdateApplication|DeleteApplication|Secp256k1|Secp256r1|Sender|Fee|FirstValid|FirstValidTime|LastValid|Note|Lease|Receiver|Amount|CloseRemainderTo|VotePK|SelectionPK|VoteFirst|VoteLast|VoteKeyDilution|Type|TypeEnum|XferAsset|AssetAmount|AssetSender|AssetReceiver|AssetCloseTo|GroupIndex|TxID|ApplicationID|OnCompletion|ApplicationArgs|NumAppArgs|Accounts|NumAccounts|ApprovalProgram|ClearStateProgram|RekeyTo|ConfigAsset|ConfigAssetTotal|ConfigAssetDecimals|ConfigAssetDefaultFrozen|ConfigAssetUnitName|ConfigAssetName|ConfigAssetURL|ConfigAssetMetadataHash|ConfigAssetManager|ConfigAssetReserve|ConfigAssetFreeze|ConfigAssetClawback|FreezeAsset|FreezeAssetAccount|FreezeAssetFrozen|Assets|NumAssets|Applications|NumApplications|GlobalNumUint|GlobalNumByteSlice|LocalNumUint|LocalNumByteSlice|ExtraProgramPages|Nonparticipation|Logs|NumLogs|CreatedAssetID|CreatedApplicationID|LastLog|StateProofPK|MinTxnFee|MinBalance|MaxTxnLife|ZeroAddress|GroupSize|LogicSigVersion|Round|LatestTimestamp|CurrentApplicationID|CreatorAddress|CurrentApplicationAddress|GroupID|OpcodeBudget|CallerApplicationID|CallerApplicationAddress|||||||||||||||||||||||||||ApplicationArgs||Accounts||||||||||||||||||||Assets||Applications||||||||Logs||||||URLEncoding|StdEncoding|JSONString|JSONUint64|JSONObject|AssetBalance|AssetFrozen|AssetTotal|AssetDecimals|AssetDefaultFrozen|AssetUnitName|AssetName|AssetURL|AssetMetadataHash|AssetManager|AssetReserve|AssetFreeze|AssetClawback|AssetCreator|AppApprovalProgram|AppClearStateProgram|AppGlobalNumUint|AppGlobalNumByteSlice|AppLocalNumUint|AppLocalNumByteSlice|AppExtraProgramPages|AppCreator|AppAddress|AcctBalance|AcctMinBalance|AcctAuthAddr)\\b"
        }
      ]
    },
    "pragmas": {
      "name": "support.function.teal",
      "match": "^#pragma\\b.*$"
    },
    "strings": {
      "name": "string.quoted.double.teal",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.teal",
          "match": "\\\\(x[0-9A-Fa-f]{2}|.|$)"
        }
      ]
    }
  },
  "scopeName": "source.teal"
}
