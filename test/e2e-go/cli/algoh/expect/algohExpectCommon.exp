# Algoh Expect Utility Package
namespace eval ::Algoh {

  # Export Procedures
  namespace export Info
  namespace export EstablishNetwork


  # My Variables
   set version 1.0
   set description "Algodh Expect Package"

  # Variable for the path of the script
   variable home [file join [pwd] [file dirname [info script]]]
}

# Definition of the procedure MyProcedure
proc ::Algoh::Info {} {
   puts Algoh::description
}

package provide Algoh $Algoh::version
package require Tcl 8.0


# Start the network
proc ::Algoh::EstablishNetwork { NETWORK_NAME NETWORK_TEMPLATE TEST_ROOT_DIR } {

    # Running on ARM64, it seems that network creation is pretty slow.
    # 30 second won't be enough here, so I'm changing this to 90 seconds.
    set timeout 90

    if { [catch {
        # Create network
        puts "network create $NETWORK_NAME"
        spawn goal network create --network $NETWORK_NAME --template $NETWORK_TEMPLATE --rootdir $TEST_ROOT_DIR
        expect {
            timeout { close; ::AlgorandGoal::Abort "Timed out creating network" }
            "^Network $NETWORK_NAME created under.*" { puts "Network $NETWORK_NAME created" ; close  }
            close
        }
        puts "Primary node start"
        # Start network
        spawn goal node start -d $TEST_ROOT_DIR/Primary
        expect {
            timeout { close; ::AlgorandGoal::Abort "Timed out starting relay node"  }
            "^Algorand node successfully started!* { puts "Primary relay node started"  ;close  }
            close
        }
    } EXCEPTION ] } {
       puts "ERROR in StartNetwork: $EXCEPTION"
       exit 1
    }

    if { [catch {
        # Check network status
        puts "network status $NETWORK_NAME"
        spawn goal network status -r $TEST_ROOT_DIR
        expect {
            timeout { close; ::AlgorandGoal::Abort "Timed out retrieving network status"  }
            ".*Error getting status.*" { close; ::AlgorandGoal::Abort "error getting network status: $expect_out(buffer)""}
            "^Network Started under.*"   { puts "Network $NETWORK_NAME status ok"; close }
            close
        }
        puts "StartNetwork complete"
    } EXCEPTION ] } {
       ::AlgorandGoal::Abort "ERROR in StartNetwork: $EXCEPTION"
    }
}

# Stop the network
proc ::Algoh::StopNetwork { NETWORK_NAME TEST_ROOT_DIR } {
    set timeout 60
    set NETWORK_STOP_MESSAGE ""
    puts "Stopping network: $NETWORK_NAME"
    spawn goal network stop -r $TEST_ROOT_DIR
    expect {
        timeout {
	      close
	      puts "Timed out shutting down network"
	      puts "TEST_ROOT_DIR $::TEST_ROOT_DIR"
	      puts "NETWORK_NAME $::NETWORK_NAME"
	      exit 1
	    }
        "Network Stopped under.*" {set NETWORK_STOP_MESSAGE $expect_out(buffer); close}
    }
    puts $NETWORK_STOP_MESSAGE
}