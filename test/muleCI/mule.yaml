agents:
  - name: cicd.ubuntu.amd64
    dockerFilePath: docker/build/cicd.ubuntu.Dockerfile
    image: algorand/go-algorand-ci-linux-ubuntu
    version: scripts/configure_dev-deps.sh
    arch: amd64
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=amd64
      - FULLVERSION=${FULLVERSION}
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
      - ARCH=amd64
      - GOARCH=amd64
  - name: cicd.centos.amd64
    dockerFilePath: docker/build/cicd.centos.Dockerfile
    image: algorand/go-algorand-ci-linux-centos
    version: scripts/configure_dev-deps.sh
    arch: amd64
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=amd64
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
      - ARCH=amd64
  - name: cicd.centos8.amd64
    dockerFilePath: docker/build/cicd.centos8.Dockerfile
    image: algorand/go-algorand-ci-linux-centos8
    version: scripts/configure_dev-deps.sh
    arch: amd64
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=amd64
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
      - ARCH=amd64
  - name: cicd.ubuntu.arm64
    dockerFilePath: docker/build/cicd.ubuntu.Dockerfile
    image: algorand/go-algorand-ci-linux-ubuntu
    version: scripts/configure_dev-deps.sh
    arch: arm64v8
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=arm64
      - FULLVERSION=${FULLVERSION}
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
      - ARCH=arm64v8
      - GOARCH=arm64
  - name: cicd.ubuntu.arm
    dockerFilePath: docker/build/cicd.ubuntu.Dockerfile
    image: algorand/go-algorand-ci-linux
    version: scripts/configure_dev-deps.sh
    arch: arm32v7
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=arm
      - FULLVERSION=${FULLVERSION}
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
      - ARCH=arm32v7
      - GOARCH=armv6l
  - name: docker-ubuntu
    dockerFilePath: docker/build/docker.ubuntu.Dockerfile
    image: algorand/go-algorand-docker-linux-ubuntu
    version: scripts/configure_dev-deps.sh
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=amd64
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  - name: docker-ubuntu-signer
    dockerFilePath: docker/build/docker.ubuntu.Dockerfile
    image: algorand/go-algorand-docker-linux-ubuntu
    version: scripts/configure_dev-deps.sh
    env:
      - TRAVIS_BRANCH=${GIT_BRANCH}
      - NETWORK=$NETWORK
      - VERSION=$VERSION
      - BUILD_NUMBER=$BUILD_NUMBER
      - GOHOSTARCH=amd64
    buildArgs:
      - GOLANG_VERSION=`./scripts/get_golang_version.sh`
    volumes:
      - $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent
      - $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx

tasks:
  - task: shell.Make
    name: build.darwin-arm64
    target: ci-build
  - task: shell.Make
    name: build.darwin-amd64
    target: ci-build
  - task: docker.Make
    name: build.amd64
    agent: cicd.ubuntu.amd64
    target: ci-build
  - task: docker.Make
    name: build.arm64
    agent: cicd.ubuntu.arm64
    target: ci-build
  - task: docker.Make
    name: build.arm
    agent: cicd.ubuntu.arm
    target: ci-build

  - task: docker.Make
    name: archive
    agent: cicd.centos8.amd64
    target: archive

  - task: docker.Make
    name: rpm.amd64
    agent: cicd.centos.amd64
    target: mule-package-rpm

  - task: docker.Make
    name: deb.amd64
    agent: cicd.ubuntu.amd64
    target: mule-package-deb

  # Stash tasks
  - task: stash.Stash
    name: darwin-arm64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/darwin-arm64
    globSpecs:
      - tmp/node_pkgs/**/*
  - task: stash.Stash
    name: linux-amd64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-amd64
    globSpecs:
      - tmp/node_pkgs/**/*
  - task: stash.Stash
    name: darwin-amd64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/darwin-amd64
    globSpecs:
      - tmp/node_pkgs/**/*
  - task: stash.Stash
    name: linux-arm64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-arm64
    globSpecs:
      - tmp/node_pkgs/**/*
  - task: stash.Stash
    name: linux-arm
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-arm
    globSpecs:
      - tmp/node_pkgs/**/*
  - task: stash.Stash
    name: packages
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/packages
    globSpecs:
      - tmp/node_pkgs/**/*

    # Unstash tasks
  - task: stash.Unstash
    name: linux-arm64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-arm64
  - task: stash.Unstash
    name: linux-amd64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-amd64
  - task: stash.Unstash
    name: darwin-amd64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/darwin-amd64
  - task: stash.Unstash
    name: linux-arm
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/linux-arm
  - task: stash.Unstash
    name: darwin-arm64
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/darwin-arm64
  - task: stash.Unstash
    name: packages
    bucketName: go-algorand-ci-cache
    stashId: ${JENKINS_JOB_CACHE_ID}/packages

  - task: docker.Make
    name: docker-image
    agent: docker-ubuntu
    target: mule-package-docker

  - task: docker.Make
    name: docker-sign
    agent: docker-ubuntu-signer
    target: mule-sign

jobs:
  build-darwin-arm64:
    tasks:
      - shell.Make.build.darwin-arm64
      - stash.Stash.darwin-arm64
  build-darwin-amd64:
    tasks:
      - shell.Make.build.darwin-amd64
      - stash.Stash.darwin-amd64
  build-linux-amd64:
    tasks:
      - docker.Make.build.amd64
      - stash.Stash.linux-amd64
  build-linux-arm64:
    tasks:
      - docker.Make.build.arm64
      - stash.Stash.linux-arm64
  build-linux-arm32:
    tasks:
      - docker.Make.build.arm
      - stash.Stash.linux-arm
  package-all:
    tasks:
      - stash.Unstash.linux-amd64
      - stash.Unstash.linux-arm64
      - stash.Unstash.linux-arm
      - stash.Unstash.darwin-arm64
      - stash.Unstash.darwin-amd64
      - docker.Make.deb.amd64
      - docker.Make.rpm.amd64
      - stash.Stash.packages
  archive-all:
    tasks:
      - stash.Unstash.packages
      - docker.Make.archive
  package-docker:
    tasks:
      - docker.Make.docker-image
  sign-all:
    tasks:
      - stash.Unstash.packages
      - docker.Make.docker-sign
      - stash.Stash.packages
