tasks:
  - task: docker.Version
    configFilePath: scripts/configure_dev-deps.sh
  - task: shell.docker.Ensure
    image: algorand/go-algorand-ci-linux
    version: '{{ docker.Version.outputs.version }}'
    dockerFilePath: docker/build/cicd.Dockerfile
    dependencies: docker.Version
  - task: docker.Make
    name: build
    docker:
      image: algorand/go-algorand-ci-linux
      version: '{{ docker.Version.outputs.version }}'
      workDir: /go/src/github.com/algorand/go-algorand
    target: ci-build
  - task: docker.Make
    name: fulltest
    docker:
      image: algorand/go-algorand-ci-linux
      version: '{{ docker.Version.outputs.version }}'
      workDir: /go/src/github.com/algorand/go-algorand
    target: fulltest -j4
  - task: docker.Make
    name: shorttest
    docker:
      image: algorand/go-algorand-ci-linux
      version: '{{ docker.Version.outputs.version }}'
      workDir: /go/src/github.com/algorand/go-algorand
    target: shorttest -j4
  - task: docker.Make
    name: integration-test
    docker:
      image: algorand/go-algorand-ci-linux
      version: '{{ docker.Version.outputs.version }}'
      workDir: /go/src/github.com/algorand/go-algorand
    target: ci-integration -j4
  - task: shell.Make
    name: deps
    target: ci-deps
  - task: shell.Make
    name: build
    target: ci-build
  - task: shell.Make
    name: fulltest
    target: fulltest -j4
  - task: shell.Make
    name: shorttest
    target: shorttest -j3
  - task: shell.Make
    name: integration-test
    target: ci-integration -j4
  - task: shell.Make
    name: archive
    target: archive

  - task: s3.UploadFiles
    name: bin-cache
    bucketName: go-algorand-ci-cache
    prefix: ${JENKINS_JOB_CACHE_ID}/
    globSpec:
      - tmp/node_pkgs/**
  - task: s3.DownloadFiles
    name: bin-cache
    bucketName: go-algorand-ci-cache
    prefix: ${JENKINS_JOB_CACHE_ID}/
    suffix: 
    outputDir: tmp

jobs:
  # Linux arm64 jobs
  build-linux-arm64:
    configs:
      arch: arm64v8
    tasks:
      - shell.docker.Ensure
      - docker.Make.build
      - s3.UploadFiles.bin-cache

  test-linux-arm64:
    configs:
      arch: arm64v8
    tasks:
      - shell.docker.Ensure
      - s3.DownloadFiles.bin-cache
      - docker.Make.integration-test

#  test-linux-arm64:
#    configs:
#      arch: arm64v8
#    tasks:
#      - shell.docker.Ensure
#      - docker.Make.integration-test
#
#   # Linux amd64 jobs
#  build-linux-amd64:
#    configs:
#      arch: amd64
#    tasks:
#      - shell.docker.Ensure
#      - docker.Make.shorttest

