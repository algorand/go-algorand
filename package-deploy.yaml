tasks:
  - task: docker.Version
    configFilePath: scripts/configure_dev-deps.sh

  - task: shell.docker.Ensure
    name: deploy
    image: algorand/mule-linux-ubuntu
    version: '{{ docker.Version.outputs.version }}'
    dockerFilePath: docker/build/docker.ubuntu.Dockerfile
    dependencies: docker.Version

  - task: docker.Make
    name: generate-releases-page
    docker:
      image: algorand/mule-linux-ubuntu
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
    target: mule-deploy-generate-releases-page WORKDIR=/projects/go-algorand

  - task: docker.Make
    name: deb
    docker:
      image: algorand/mule-linux-ubuntu
      version: '{{ docker.Version.outputs.version }}'
      workDir: /projects/go-algorand
      env: [
        AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID,
        AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      ]
      volumes: [
        $HOME/packages:/root/packages,
        $XDG_RUNTIME_DIR/gnupg/S.gpg-agent:/root/.gnupg/S.gpg-agent,
        $HOME/.gnupg/pubring.kbx:/root/.gnupg/pubring.kbx
      ]
    target: mule-deploy-deb WORKDIR=/projects/go-algorand

  - task: s3.DownloadFile
    name: deb
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand_${CHANNEL}_${OS_TYPE}-${ARCH_TYPE}_${VERSION}.deb
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

  - task: s3.DownloadFile
    name: rpm
    bucketName: algorand-staging
    objectName: releases/$CHANNEL/$VERSION/algorand-${VERSION}-1.${ARCH_BIT}.rpm
    outputDir: /projects/go-algorand/tmp/node_pkgs/${OS_TYPE}/${ARCH_TYPE}

  - task: s3.UploadFile
    name: releases-page
    bucketName: ben-test-2.0.3
    fileName: /projects/go-algorand/scripts/release/mule/deploy/generate_releases_page/foo.html

  - task: s3.BucketCopy
    name: deploy
    bucketSrc: ben-test-2.0.3
    prefixSrc: stable/2.0.5
    bucketDest: algorand-dev-deb-repo
    prefixDest: releases/stable/test

jobs:
  package-deploy:
    configs:
      arch: amd64
    tasks:
      - shell.docker.Ensure.deploy
      - docker.Make.generate-releases-page
      - docker.Make.deb
      - docker.Make.package-deploy-rpm

  package-deploy-setup-copy:
    tasks:
      - s3.BucketCopy.deploy

  package-deploy-setup-deb:
    tasks:
      - s3.DownloadFile.deb

  package-deploy-setup-rpm:
    tasks:
      - s3.DownloadFile.rpm

  package-deploy-releases-page:
    tasks:
      - s3.UploadFile.releases-page

