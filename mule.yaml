stages:
  build-linux-amd64:
  - task: docker.Version
    name: linux-amd64
    arch: amd64
    configFilePath: scripts/configure_dev-deps.sh
  - task: shell.docker.Ensure
    image: algorand/go-algorand-linux
    arch: amd64
    version: '{{ docker.Version.linux-amd64.version }}'
    dockerFilePath: docker/build/cicd.Dockerfile
  - task: docker.Make
    image: algorand/go-algorand-linux
    version: '{{ docker.Version.linux-amd64.version }}'
    workDir: /go/src/github.com/algorand/go-algorand
    target: fulltest ci-build
  build-linux-arm64:
  - task: docker.Version
    name: linux-arm64
    arch: arm64v8
    configFilePath: scripts/configure_dev-deps.sh
  - task: shell.docker.Ensure
    image: algorand/go-algorand-linux
    arch: arm64v8
    version: '{{ docker.Version.linux-arm64.version }}'
    dockerFilePath: docker/build/cicd.Dockerfile
  - task: docker.Make
    image: algorand/go-algorand-linux
    version: '{{ docker.Version.linux-arm64.version }}'
    workDir: /go/src/github.com/algorand/go-algorand
    target: fulltest ci-build
  build-linux-arm:
  - task: docker.Version
    name: linux-arm
    arch: arm32v6
    configFilePath: scripts/configure_dev-deps.sh
  - task: shell.docker.Ensure
    image: algorand/go-algorand-linux
    arch: arm32v6
    version: '{{ docker.Version.linux-arm.version }}'
    dockerFilePath: docker/build/arm.Dockerfile
  - task: docker.Make
    image: algorand/go-algorand-linux
    version: '{{ docker.Version.linux-arm.version }}'
    workDir: /go/src/github.com/algorand/go-algorand
    target: ci-build
  build-local:
  - task: shell.Make
    target: ci-deps fulltest ci-build
  release:
  - task: release.notes.GenerateReleaseNotes
    releaseVersion: ${GO_ALGORAND_RELEASE_VERSION}
    githubPatToken: ${GITHUB_PAT_TOKEN}
    githubRepoFullName: algorand/go-algorand
